version: '3.8'

services:
 postgres:
    image: postgres:16.1-alpine3.19
    environment:
      POSTGRES_DB: "users"
      POSTGRES_USER: "pet"
      POSTGRES_PASSWORD: "project"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - scripts:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fullstack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pet -d users"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
 usr:
    build:
      context: .
      dockerfile: ./ci/Dockerfile
    environment:
      - USR_DEBUG=false
      - USR_LOGGER_MODE=prod
      - USR_DBCONFIG_HOST=localhost
      - USR_DBCONFIG_PORT=5432
      - USR_DBCONFIG_USER=pet
      - USR_DBCONFIG_PASSWORD=project
      - USR_DBCONFIG_DBNAME=users
    ports:
      - "8080:8080"
    networks:
      - fullstack
    depends_on:
      postgres:
        condition: service_healthy

  
volumes:
  pg_data:
    driver: local
    driver_opts:
      type: bind
      device: $PWD/pg_data
      o: bind

  scripts:
    driver: local
    driver_opts:
      type: bind
      device: $PWD/pg_data/scripts
      o: bind

networks:
  fullstack:
    driver: bridge